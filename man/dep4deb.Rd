\name{dep4deb}
\alias{dep4deb}
\title{Download package dependencies}
\usage{
dep4deb(pck.source.dir, pck.name = NULL, destdir = file.path(tempdir(),
  "roxyPackge", "downloads"), repos = getOption("repos"), all = FALSE,
  check.deb = TRUE, origin = "cran", origin.alt = list(),
  available = NULL)
}
\arguments{
  \item{pck.source.dir}{Character string, path pointing to
  the root directory of your package sources, to a local R
  package source tarball, or a full URL to such a package
  tarball. Tarballs will be downloaded to \code{destdir},
  if needed, extracted, and then checked for dependencies.
  Will be ignored if \code{pck.name} is not \code{NULL}.}

  \item{pck.name}{Character string, the package name. This
  is an alternative to using \code{pck.source.dir}.}

  \item{destdir}{File path to the directory where all
  downloaded files should be saved to.}

  \item{repos}{Character vector, the base URL(s) of the
  repositories to use (see
  \code{\link[utils:download.packages]{download.packages}}).}

  \item{all}{Logical, if \code{FALSE} only currently
  missing packages are downloaded, where "missing" means
  that there is no Debian package if these packages
  installed. If \code{TRUE} and \code{check.deb=FALSE}, all
  dependencies will be downloaded.}

  \item{check.deb}{Logical, \code{TRUE} it will be checked
  if a debian package can be found, and if that is the
  case, its name is added to the results and the download
  skipped. If \code{all=FALSE}, packages will only be
  listed in the results if they are not installed.}

  \item{origin}{A character string for the package origin,
  see \code{\link[roxyPackage:debianize]{debianize}}.}

  \item{origin.alt}{A named list for more complex origin
  configuration, see
  \code{\link[roxyPackage:debianize]{debianize}}.}

  \item{available}{An object as returned by
  \code{\link[utils:available.packages]{available.packages}}
  listing packages available at the repositories, or NULL
  which makes an internal call to available.packages.}
}
\value{
Returns a list with two elements: \describe{ \item{dl}{A
matrix as returned by
\code{\link[utils:download.packages]{download.packages}},
listing all downloaded sources} \item{deb}{A character
vector naming already available Debian packages} }
}
\description{
Tries to fetch all (missing) R packages to successfully
build a Debian package. The packages are downloaded in
source format for you to
\code{\link[roxyPackage:debianize]{debianize}}, but
\code{dep4deb} can try to check for available Debian
packages instead.
}
\details{
The function works its way recursively through the
dependencies of the dependencies, beginning with the
original package given. To make it easier for you to
debianize the downloaded packages in a proper order, all
downloads will be stored in numbered subfolders of the main
download folder, and you should work from the highest
number backwards.
}
\examples{
\dontrun{
dep4deb(pck.name="roxyPackage")
}
}

